syntax = "proto3";

package Price;

service Tob {
	rpc CurrentPrice(TickRequest) returns (TickDelta) {}
}

service Direction {
	rpc Move(TickDirectionRequest) returns (TickDirectionDelta) {}
}


//service Health {
//  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
//
//  rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
//}
//
//
//// Messages for health checking Tick and Direction Servers
//message HealthCheckRequest {
//  string service = 1;
//}
//
//message HealthCheckResponse {
//  enum ServingStatus {
//    UNKNOWN = 0;
//    SERVING = 1;
//    NOT_SERVING = 2;
//    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
//  }
//  ServingStatus status = 1;
//}




// Messages from tickClient -> tickServer
message TickRequest {
	string symbol = 1;
}

message TickDelta {
	double delta_price = 1;
	int32  delta_size = 2;

    enum Status {
		GOOD = 0;
		ERROR = 1;
	};

	Status status = 3;
}


// Messages from tickServer -> tickDirectionServer
message TickDirectionRequest {
	string symbol = 1;
}

message TickDirectionDelta {
	int32 delta_price = 1;
	int32 delta_size = 2;
}

